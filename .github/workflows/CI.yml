  # name: CI

  # on:
  #   push:
  #     branches: [ main ]
  #   pull_request:
  #     branches: [ main ]

  # env:
  #   AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  #   AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  #   JWT_SECRET: ${{secrets.JWT_SECRET}}
  #   JWT_REFRESH_SECRET: ${{secrets.JWT_REFRESH_SECRET}}
  #   SPRING_PROFILES_ACTIVE: test
  #   GOOGLE_APPLICATION_CREDENTIALS: $HOME/gcp-key.json
  #   KIS_APPKEY: ${{secrets.KIS_APPKEY}}
  #   KIS_SECRETKEY: ${{secrets.KIS_SECRETKEY}}

  # jobs:
  #   test:
  #     name: Run Tests
  #     runs-on: ubuntu-latest
  #     environment: dev

  #     steps:
  #       - name: Checkout code
  #         uses: actions/checkout@v3

  #       - name: Set up JDK 17
  #         uses: actions/setup-java@v3
  #         with:
  #           distribution: temurin
  #           java-version: '17'

  #       - name: Cache Gradle packages
  #         uses: actions/cache@v3
  #         with:
  #           path: |
  #             ~/.gradle/caches
  #             ~/.gradle/wrapper
  #           key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
  #           restore-keys: |
  #             ${{ runner.os }}-gradle

  #       - name: Grant execute permission for gradlew
  #         run: chmod +x gradlew

  #       - name: Set up Google Cloud credentials
  #         run: echo '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}' > $HOME/gcp-key.json

  #       - name: Set GOOGLE_APPLICATION_CREDENTIALS
  #         run: echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcp-key.json" >> $GITHUB_ENV

  #       - name: Authenticate to Google Cloud
  #         run: gcloud auth activate-service-account --key-file=$HOME/gcp-key.json

  #       - name: Run tests
  #         run: ./gradlew test --no-daemon

  #   build:
  #     name: Build Application
  #     needs: test
  #     runs-on: ubuntu-latest
  #     environment: dev

  #     steps:
  #       - name: Checkout code
  #         uses: actions/checkout@v3

  #       - name: Set up JDK 17
  #         uses: actions/setup-java@v3
  #         with:
  #           distribution: temurin
  #           java-version: '17'

  #       - name: Cache Gradle packages
  #         uses: actions/cache@v3
  #         with:
  #           path: |
  #             ~/.gradle/caches
  #             ~/.gradle/wrapper
  #           key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
  #           restore-keys: |
  #             ${{ runner.os }}-gradle

  #       - name: Grant execute permission for gradlew
  #         run: chmod +x gradlew

  #       - name: Set up Google Cloud credentials
  #         run: echo '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}' > $HOME/gcp-key.json

  #       - name: Set GOOGLE_APPLICATION_CREDENTIALS
  #         run: echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcp-key.json" >> $GITHUB_ENV

  #       - name: Authenticate to Google Cloud
  #         run: gcloud auth activate-service-account --key-file=$HOME/gcp-key.json

  #       - name: Build application
  #         run: ./gradlew build --no-daemon
